/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var MyLibrary;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/series.ts":
/*!***********************!*\
  !*** ./src/series.ts ***!
  \***********************/
/***/ (function() {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nlet currentSlide = 0;\r\nlet slideData;\r\nlet moviesgenre = [\r\n    {\r\n        id: 10759,\r\n        name: \"Action & Adventure\",\r\n    },\r\n    {\r\n        id: 16,\r\n        name: \"Animation\",\r\n    },\r\n    {\r\n        id: 35,\r\n        name: \"Comedy\",\r\n    },\r\n    {\r\n        id: 80,\r\n        name: \"Crime\",\r\n    },\r\n    {\r\n        id: 99,\r\n        name: \"Documentary\",\r\n    },\r\n    {\r\n        id: 18,\r\n        name: \"Drama\",\r\n    },\r\n    {\r\n        id: 10751,\r\n        name: \"Family\",\r\n    },\r\n    {\r\n        id: 10762,\r\n        name: \"Kids\",\r\n    },\r\n    {\r\n        id: 9648,\r\n        name: \"Mystery\",\r\n    },\r\n    {\r\n        id: 10765,\r\n        name: \"Sci-Fi & Fantasy\",\r\n    },\r\n];\r\nlet randomgenre;\r\n//event onload\r\nwindow.addEventListener(\"load\", () => {\r\n    //Init Next and Prev buttons carousel\r\n    const nextButton = document.getElementById(\"image-next\");\r\n    const prevButton = document.getElementById(\"image-prev\");\r\n    const nextMoviedisplay = document.querySelectorAll(\".image-next-movie\");\r\n    const prevMoviedisplay = document.querySelectorAll(\".image-prev-movie\");\r\n    generateTrendingCarousel();\r\n    //generate all genres\r\n    moviesgenre.forEach((element) => {\r\n        generateMovieCarousel(element.id);\r\n    });\r\n});\r\nlet popularMovies;\r\nlet playingMovies;\r\nfunction searchPopularMovies() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const url = \"https://api.themoviedb.org/3/tv/popular?language=en-US&page=1\";\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                accept: \"application/json\",\r\n                Authorization: `Bearer ${\"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZDQ2OGFkNTgwNmU1ZWI0NDhhZjk0OGNiMjAwMjgxNiIsIm5iZiI6MTU4NTI4NDM5OS43ODcwMDAyLCJzdWIiOiI1ZTdkODUyZjEwOWRlYzFlYmIwMzI1ODgiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.OpyKjW01g-bP6xY56QHwDIwQdGCJZ33fp5LKp8KuElU\"}` /* process.env.TMDB_API_KEY */,\r\n            },\r\n        };\r\n        fetch(url, options)\r\n            .then((res) => res.json())\r\n            .then((json) => (popularMovies = json))\r\n            .then(() => {\r\n            displayPopularMovies();\r\n        })\r\n            .catch((err) => console.error(err));\r\n    });\r\n}\r\nfunction displayPopularMovies() {\r\n    const resultsContainer = document.getElementById(\"movie-caraousel-popular\");\r\n    const cardTemplate = document.getElementById(\"movie-card-template\");\r\n    popularMovies.results.forEach((movie) => {\r\n        const card = cardTemplate.content.cloneNode(true);\r\n        const image = card.querySelector(\"img\");\r\n        const title = card.querySelector(\"a\");\r\n        if (image) {\r\n            image.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\r\n            image.alt = movie.original_title;\r\n            //add onclick event to image\r\n            image.onclick = () => {\r\n                window.location.href = `/tv/watch.html?title=${movie.name}&id=${movie.id}`;\r\n            };\r\n            image.onerror = () => {\r\n                image.src = \"https://via.placeholder.com/500x750\";\r\n            };\r\n        }\r\n        if (title) {\r\n            title.textContent = movie.original_title;\r\n        }\r\n        if (resultsContainer) {\r\n            resultsContainer.appendChild(card);\r\n        }\r\n        //image href to watch page\r\n        if (title) {\r\n            // change the title to the movie title\r\n            title.textContent = movie.original_title;\r\n            // add href to the title\r\n            title.href = `/tv/watch.html?title=${movie.name}&id=${movie.id}`;\r\n        }\r\n    });\r\n}\r\nfunction compareData(data, data2) {\r\n    // remove duplicates at data2\r\n    const filteredData = data2.filter((item) => !data.some((other) => item.id === other.id));\r\n    return filteredData;\r\n}\r\nfunction getmoviecountry(country) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const container = document.getElementById(\"movie-caraousel-country\");\r\n        let moviedatacountry;\r\n        const url = `https://api.themoviedb.org/3/discover/movie?include_adult=false&include_video=false&language=en-US&page=1&sort_by=revenue.desc&with_origin_country=${country}`;\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                accept: \"application/json\",\r\n                Authorization: `Bearer ${\"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZDQ2OGFkNTgwNmU1ZWI0NDhhZjk0OGNiMjAwMjgxNiIsIm5iZiI6MTU4NTI4NDM5OS43ODcwMDAyLCJzdWIiOiI1ZTdkODUyZjEwOWRlYzFlYmIwMzI1ODgiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.OpyKjW01g-bP6xY56QHwDIwQdGCJZ33fp5LKp8KuElU\"}` /* process.env.TMDB_API_KEY */,\r\n            },\r\n        };\r\n        fetch(url, options)\r\n            .then((res) => res.json())\r\n            .then((json) => (moviedatacountry = json))\r\n            .then(() => {\r\n            displayMovieTo(container, moviedatacountry.results);\r\n        })\r\n            .catch((err) => console.error(err));\r\n    });\r\n}\r\nfunction generateMovieCarousel(id) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const caraouselTemplate = document.getElementById(\"movie-caraousel-template\");\r\n        const carouselParent = document.getElementById(\"movie-caraousel\");\r\n        const genreName = moviesgenre.find((genre) => genre.id === id);\r\n        if (caraouselTemplate) {\r\n            const url = `https://api.themoviedb.org/3/discover/tv?include_adult=false&include_null_first_air_dates=false&language=en-US&page=1&sort_by=vote_count.desc&with_genres=${id}`;\r\n            const options = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    accept: \"application/json\",\r\n                    Authorization: `Bearer ${\"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZDQ2OGFkNTgwNmU1ZWI0NDhhZjk0OGNiMjAwMjgxNiIsIm5iZiI6MTU4NTI4NDM5OS43ODcwMDAyLCJzdWIiOiI1ZTdkODUyZjEwOWRlYzFlYmIwMzI1ODgiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.OpyKjW01g-bP6xY56QHwDIwQdGCJZ33fp5LKp8KuElU\"}` /* process.env.TMDB_API_KEY */,\r\n                },\r\n            };\r\n            fetch(url, options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                const movies = json.results;\r\n                //make new carousel from template\r\n                const carousel = caraouselTemplate.content.cloneNode(true);\r\n                const carouselTitle = carousel.querySelector(\"h2\");\r\n                const carouselContainer = carousel.querySelector(\".movie-caraousel-container-place\");\r\n                //change carouselcontainer id to genre name\r\n                carouselContainer.id = \"movie-caraousel-container-\" + (genreName === null || genreName === void 0 ? void 0 : genreName.name);\r\n                const carouselButtonNextMovie = carousel.querySelector(\".next-popular\");\r\n                const carouselButtonPrevMovie = carousel.querySelector(\".prev-popular\");\r\n                if (carouselTitle) {\r\n                    carouselTitle.textContent = (genreName === null || genreName === void 0 ? void 0 : genreName.name) || \"\";\r\n                }\r\n                if (carouselContainer) {\r\n                    displayMovieTo(carouselContainer, movies);\r\n                }\r\n                if (carouselParent) {\r\n                    carouselParent.appendChild(carousel);\r\n                }\r\n                if (carouselButtonNextMovie) {\r\n                    //change innerHTML onclick event to genre name\r\n                    carouselButtonNextMovie.setAttribute(\"onclick\", `nextSlide(\"movie-caraousel-container-${genreName === null || genreName === void 0 ? void 0 : genreName.name}\")`);\r\n                }\r\n                else {\r\n                    console.error(\"Element not found next \");\r\n                }\r\n                if (carouselButtonPrevMovie) {\r\n                    //change innerHTML onclick event to genre name\r\n                    carouselButtonPrevMovie.setAttribute(\"onclick\", `prevSlide(\"movie-caraousel-container-${genreName === null || genreName === void 0 ? void 0 : genreName.name}\")`);\r\n                }\r\n                else {\r\n                    console.error(\"Element not found prev \");\r\n                }\r\n            })\r\n                .catch((err) => console.error(err));\r\n        }\r\n    });\r\n}\r\nfunction generateTrendingCarousel() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const caraouselTemplate = document.getElementById(\"movie-caraousel-template\");\r\n        const carouselParent = document.getElementById(\"movie-caraousel\");\r\n        if (caraouselTemplate) {\r\n            const url = \"https://api.themoviedb.org/3/trending/tv/day?language=en-US\";\r\n            const options = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    accept: \"application/json\",\r\n                    Authorization: `Bearer ${\"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZDQ2OGFkNTgwNmU1ZWI0NDhhZjk0OGNiMjAwMjgxNiIsIm5iZiI6MTU4NTI4NDM5OS43ODcwMDAyLCJzdWIiOiI1ZTdkODUyZjEwOWRlYzFlYmIwMzI1ODgiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.OpyKjW01g-bP6xY56QHwDIwQdGCJZ33fp5LKp8KuElU\"}` /* process.env.TMDB_API_KEY */,\r\n                },\r\n            };\r\n            fetch(url, options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                const movies = json.results;\r\n                //make new carousel from template\r\n                const carousel = caraouselTemplate.content.cloneNode(true);\r\n                const carouselTitle = carousel.querySelector(\"h2\");\r\n                const carouselContainer = carousel.querySelector(\".movie-caraousel-container-place\");\r\n                //change carouselcontainer id to genre name\r\n                carouselContainer.id = \"movie-caraousel-container-\" + \"trending\";\r\n                const carouselButtonNextMovie = carousel.querySelector(\".next-popular\");\r\n                const carouselButtonPrevMovie = carousel.querySelector(\".prev-popular\");\r\n                if (carouselTitle) {\r\n                    carouselTitle.textContent = \"Trending\";\r\n                }\r\n                if (carouselContainer) {\r\n                    displayMovieTo(carouselContainer, movies);\r\n                }\r\n                if (carouselParent) {\r\n                    carouselParent.appendChild(carousel);\r\n                }\r\n                if (carouselButtonNextMovie) {\r\n                    //change innerHTML onclick event to genre name\r\n                    carouselButtonNextMovie.setAttribute(\"onclick\", `nextSlide(\"movie-caraousel-container-trending\")`);\r\n                }\r\n                else {\r\n                    console.error(\"Element not found next \");\r\n                }\r\n                if (carouselButtonPrevMovie) {\r\n                    //change innerHTML onclick event to genre name\r\n                    carouselButtonPrevMovie.setAttribute(\"onclick\", `prevSlide(\"movie-caraousel-container-trending\")`);\r\n                }\r\n                else {\r\n                    console.error(\"Element not found prev \");\r\n                }\r\n            })\r\n                .catch((err) => console.error(err));\r\n        }\r\n    });\r\n}\r\nfunction displayMovieTo(carouselContainer, movie) {\r\n    const cardTemplate = document.getElementById(\"movie-card-template\");\r\n    movie.forEach((movie) => {\r\n        const card = cardTemplate.content.cloneNode(true);\r\n        const image = card.querySelector(\"img\");\r\n        const title = card.querySelector(\"a\");\r\n        const movieInfoTitle = card.querySelector(\".movie-info span\");\r\n        const movieInfoRating = card.querySelector(\".movie-card-rating span\");\r\n        const movieType = card.querySelector(\".movie-type\");\r\n        if (image) {\r\n            image.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\r\n            image.alt = movie.original_title;\r\n            //add onclick event to image\r\n            image.onclick = () => {\r\n                window.location.href = `/tv/watch.html?title=${movie.name}&id=${movie.id}`;\r\n            };\r\n            image.onerror = () => {\r\n                image.src = \"https://via.placeholder.com/500x750\";\r\n            };\r\n        }\r\n        if (title) {\r\n            title.textContent = movie.original_title;\r\n        }\r\n        if (carouselContainer) {\r\n            movieInfoTitle.textContent = movie.name;\r\n            movieInfoRating.textContent = movie.vote_average.toFixed(1);\r\n            movieType.textContent = \"TV\";\r\n            carouselContainer.appendChild(card);\r\n        }\r\n        //image href to watch page\r\n        if (title) {\r\n            // change the title to the movie title\r\n            title.textContent = movie.original_title;\r\n            // add href to the title\r\n            title.href = `/tv/watch.html?title=${movie.name}&id=${movie.id}`;\r\n        }\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://MyLibrary/./src/series.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/series.ts"]();
/******/ 	MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;