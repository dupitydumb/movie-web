/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var MyLibrary;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/MovieCard.ts":
/*!**************************!*\
  !*** ./src/MovieCard.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MovieCard = void 0;\r\nclass MovieCard {\r\n    constructor(title, imageUrl, releaseDate) {\r\n        this.title = title;\r\n        this.imageUrl = imageUrl;\r\n        this.releaseDate = releaseDate;\r\n    }\r\n    render() {\r\n        const template = document.getElementById(\"movie-card-template\");\r\n        const clone = template.content.cloneNode(true);\r\n        const img = clone.querySelector(\"img\");\r\n        img.src = this.imageUrl;\r\n        img.alt = this.title;\r\n        const titleElement = clone.querySelector(\"h3\");\r\n        titleElement.textContent = this.title;\r\n        const releaseDateElement = clone.querySelector(\".image-text-data\");\r\n        releaseDateElement.textContent = this.releaseDate;\r\n        return clone;\r\n    }\r\n}\r\nexports.MovieCard = MovieCard;\r\n\n\n//# sourceURL=webpack://MyLibrary/./src/MovieCard.ts?");

/***/ }),

/***/ "./src/client.ts":
/*!***********************!*\
  !*** ./src/client.ts ***!
  \***********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MovieCarousel = void 0;\r\nconst MovieCard_1 = __webpack_require__(/*! ./MovieCard */ \"./src/MovieCard.ts\");\r\nclass MovieCarousel {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    init(movies) {\r\n        movies.forEach((movie) => {\r\n            const movieCard = new MovieCard_1.MovieCard(movie.title, movie.imageUrl, movie.releaseDate);\r\n            this.container.appendChild(movieCard.render());\r\n        });\r\n    }\r\n}\r\nexports.MovieCarousel = MovieCarousel;\r\nlet currentSlide = 0;\r\nlet slideData;\r\n//event onload\r\nwindow.addEventListener(\"load\", () => {\r\n    console.log(\"Hello from client.ts\");\r\n    searchPopularMovies();\r\n    searchPlayingMovies();\r\n    //Init Next and Prev buttons carousel\r\n    const nextButton = document.getElementById(\"image-next\");\r\n    const prevButton = document.getElementById(\"image-prev\");\r\n    nextButton.addEventListener(\"click\", () => {\r\n        changeSlide(1);\r\n    });\r\n    prevButton.addEventListener(\"click\", () => {\r\n        changeSlide(-1);\r\n    });\r\n    // click next button every 5 seconds\r\n    setInterval(() => {\r\n        changeSlide(1);\r\n    }, 15000);\r\n});\r\n//array of movies genres and ids\r\nlet moviesgenre = [\r\n    {\r\n        id: 28,\r\n        name: \"Action\",\r\n    },\r\n    {\r\n        id: 12,\r\n        name: \"Adventure\",\r\n    },\r\n    {\r\n        id: 16,\r\n        name: \"Animation\",\r\n    },\r\n    {\r\n        id: 35,\r\n        name: \"Comedy\",\r\n    },\r\n    {\r\n        id: 80,\r\n        name: \"Crime\",\r\n    },\r\n    {\r\n        id: 99,\r\n        name: \"Documentary\",\r\n    },\r\n    {\r\n        id: 18,\r\n        name: \"Drama\",\r\n    },\r\n    {\r\n        id: 10751,\r\n        name: \"Family\",\r\n    },\r\n    {\r\n        id: 14,\r\n        name: \"Fantasy\",\r\n    },\r\n    {\r\n        id: 36,\r\n        name: \"History\",\r\n    },\r\n    {\r\n        id: 27,\r\n        name: \"Horror\",\r\n    },\r\n    {\r\n        id: 10402,\r\n        name: \"Music\",\r\n    },\r\n    {\r\n        id: 9648,\r\n        name: \"Mystery\",\r\n    },\r\n    {\r\n        id: 10749,\r\n        name: \"Romance\",\r\n    },\r\n    {\r\n        id: 878,\r\n        name: \"Science Fiction\",\r\n    },\r\n    {\r\n        id: 10770,\r\n        name: \"TV Movie\",\r\n    },\r\n    {\r\n        id: 53,\r\n        name: \"Thriller\",\r\n    },\r\n    {\r\n        id: 10752,\r\n        name: \"War\",\r\n    },\r\n    {\r\n        id: 37,\r\n        name: \"Western\",\r\n    },\r\n];\r\nfunction showSlide(index) {\r\n    const slides = document.querySelectorAll(\".slide\");\r\n    if (index >= slides.length) {\r\n        index = 0;\r\n    }\r\n    else if (index < 0) {\r\n        index = slides.length - 1;\r\n    }\r\n    currentSlide = index;\r\n    console.log(\"showSlide\", currentSlide);\r\n    const offset = -currentSlide * 100;\r\n    const slidesElement = document.querySelector(\".slides\");\r\n    if (slidesElement) {\r\n        slidesElement.style.transform = `translateX(${offset}%)`;\r\n    }\r\n    const slidestitle = document.getElementById(\"caraousel-title\");\r\n    const slidesDescription = document.getElementById(\"caraousel-description\");\r\n    const slidesReleaseDate = document.getElementById(\"caraousel-year\");\r\n    const slidesRating = document.getElementById(\"caraousel-rating\");\r\n    if (slidestitle && slidesDescription && slidesReleaseDate && slidesRating) {\r\n        if (slideData) {\r\n            slidestitle.textContent = slideData[currentSlide].title;\r\n            slidesDescription.textContent = slideData[currentSlide].overview;\r\n            slidesReleaseDate.textContent = slideData[currentSlide].release_date;\r\n            slidesRating.textContent = slideData[currentSlide].vote_average;\r\n            //make tittle clickable\r\n            slidestitle.onclick = () => {\r\n                window.location.href = `/watch?title=${slideData[currentSlide].title}&id=${slideData[currentSlide].id}`;\r\n            };\r\n        }\r\n        else {\r\n            console.error(\"slideData is undefined\");\r\n        }\r\n    }\r\n    else {\r\n        console.error(\"Element not found\");\r\n    }\r\n}\r\nfunction changeSlide(direction) {\r\n    showSlide(currentSlide + direction);\r\n}\r\nlet popularMovies;\r\nlet playingMovies;\r\nfunction searchPopularMovies() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const url = \"https://api.themoviedb.org/3/movie/popular?language=en-US&page=1\";\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                accept: \"application/json\",\r\n                Authorization: `Bearer ${\"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZDQ2OGFkNTgwNmU1ZWI0NDhhZjk0OGNiMjAwMjgxNiIsIm5iZiI6MTU4NTI4NDM5OS43ODcwMDAyLCJzdWIiOiI1ZTdkODUyZjEwOWRlYzFlYmIwMzI1ODgiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.OpyKjW01g-bP6xY56QHwDIwQdGCJZ33fp5LKp8KuElU\"}` /* process.env.TMDB_API_KEY */,\r\n            },\r\n        };\r\n        fetch(url, options)\r\n            .then((res) => res.json())\r\n            .then((json) => (popularMovies = json))\r\n            .then(() => {\r\n            displayPopularMovies();\r\n            setSlideData(popularMovies);\r\n        })\r\n            .catch((err) => console.error(err));\r\n    });\r\n}\r\nfunction searchPlayingMovies() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const url = \"https://api.themoviedb.org/3/movie/now_playing?language=en-US&page=1\";\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                accept: \"application/json\",\r\n                Authorization: `Bearer ${\"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZDQ2OGFkNTgwNmU1ZWI0NDhhZjk0OGNiMjAwMjgxNiIsIm5iZiI6MTU4NTI4NDM5OS43ODcwMDAyLCJzdWIiOiI1ZTdkODUyZjEwOWRlYzFlYmIwMzI1ODgiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.OpyKjW01g-bP6xY56QHwDIwQdGCJZ33fp5LKp8KuElU\"}` /* process.env.TMDB_API_KEY */,\r\n            },\r\n        };\r\n        fetch(url, options)\r\n            .then((res) => res.json())\r\n            .then((json) => (console.log(json), (playingMovies = json)))\r\n            .then(() => {\r\n            displayPlaying();\r\n        })\r\n            .catch((err) => console.error(err));\r\n    });\r\n}\r\nfunction displayPopularMovies() {\r\n    const resultsContainer = document.getElementById(\"movie-caraousel-popular\");\r\n    const cardTemplate = document.getElementById(\"movie-card-template\");\r\n    popularMovies.results.forEach((movie) => {\r\n        const card = cardTemplate.content.cloneNode(true);\r\n        const image = card.querySelector(\"img\");\r\n        const title = card.querySelector(\"a\");\r\n        if (image) {\r\n            image.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\r\n            image.alt = movie.original_title;\r\n            //add onclick event to image\r\n            image.onclick = () => {\r\n                window.location.href = `/watch?title=${movie.title}&id=${movie.id}`;\r\n            };\r\n            image.onerror = () => {\r\n                image.src = \"https://via.placeholder.com/500x750\";\r\n            };\r\n        }\r\n        if (title) {\r\n            title.textContent = movie.original_title;\r\n        }\r\n        if (resultsContainer) {\r\n            resultsContainer.appendChild(card);\r\n        }\r\n        //image href to watch page\r\n        if (title) {\r\n            // change the title to the movie title\r\n            title.textContent = movie.original_title;\r\n            // add href to the title\r\n            title.href = `/watch?title=${movie.title}&id=${movie.id}`;\r\n        }\r\n    });\r\n}\r\nfunction displayPlaying() {\r\n    const resultsContainer = document.getElementById(\"movie-caraousel-playing\");\r\n    const cardTemplate = document.getElementById(\"movie-card-template\");\r\n    playingMovies.results.forEach((movie) => {\r\n        const card = cardTemplate.content.cloneNode(true);\r\n        const image = card.querySelector(\"img\");\r\n        const title = card.querySelector(\"a\");\r\n        if (image) {\r\n            image.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\r\n            image.alt = movie.original_title;\r\n            //add onclick event to image\r\n            image.onclick = () => {\r\n                window.location.href = `/watch?title=${movie.title}&id=${movie.id}`;\r\n            };\r\n            image.onerror = () => {\r\n                image.src = \"https://via.placeholder.com/500x750\";\r\n            };\r\n        }\r\n        if (title) {\r\n            title.textContent = movie.original_title;\r\n        }\r\n        if (resultsContainer) {\r\n            resultsContainer.appendChild(card);\r\n        }\r\n        //image href to watch page\r\n        if (title) {\r\n            // change the title to the movie title\r\n            title.textContent = movie.original_title;\r\n            // add href to the title\r\n            title.href = `/watch?title=${movie.title}&id=${movie.id}`;\r\n        }\r\n    });\r\n}\r\nfunction compareData(data, data2) {\r\n    // remove duplicates at data2\r\n    const filteredData = data2.filter((item) => !data.some((other) => item.id === other.id));\r\n    return filteredData;\r\n}\r\nfunction setSlideData(data) {\r\n    //get 3 random movies\r\n    if (data && data.results) {\r\n        const randomMovies = data.results\r\n            .sort(() => Math.random() - 0.5)\r\n            .slice(0, 3);\r\n        slideData = randomMovies;\r\n        console.log(slideData);\r\n    }\r\n    else {\r\n        console.error(\"Data or data.results is undefined\");\r\n    }\r\n    showSlide(1);\r\n    const carouselImage1 = document.getElementById(\"caraousel-image-1\");\r\n    const carouselImage2 = document.getElementById(\"caraousel-image-2\");\r\n    const carouselImage3 = document.getElementById(\"caraousel-image-3\");\r\n    //array of images\r\n    const images = [carouselImage1, carouselImage2, carouselImage3];\r\n    if (carouselImage1 && carouselImage2 && carouselImage3) {\r\n        carouselImage1.src = `https://image.tmdb.org/t/p/original${slideData[0].backdrop_path}`;\r\n        carouselImage2.src = `https://image.tmdb.org/t/p/original${slideData[1].backdrop_path}`;\r\n        carouselImage3.src = `https://image.tmdb.org/t/p/original${slideData[2].backdrop_path}`;\r\n        // let index = 0;\r\n        // // get image api\r\n        // images.forEach((element) => {\r\n        //   let imagedata: any;\r\n        //   const url = `https://api.themoviedb.org/3/movie/${slideData[index].id}/images`;\r\n        //   const options = {\r\n        //     method: \"GET\",\r\n        //     headers: {\r\n        //       accept: \"application/json\",\r\n        //       Authorization: `Bearer ${process.env.TMDB_API_KEY}` /* process.env.TMDB_API_KEY */,\r\n        //     },\r\n        //   };\r\n        //   fetch(url, options)\r\n        //     .then((res) => res.json())\r\n        //     .then((json) => (imagedata = json))\r\n        //     .then(() => {\r\n        //       element.src = `https://image.tmdb.org/t/p/original${imagedata.backdrops[0].file_path}`;\r\n        //     })\r\n        //     .catch((err) => console.error(err));\r\n        //   index++;\r\n        // });\r\n    }\r\n    const slidestitle = document.getElementById(\"caraousel-title\");\r\n    const slidesDescription = document.getElementById(\"caraousel-description\");\r\n    const slidesReleaseDate = document.getElementById(\"caraousel-year\");\r\n    const slidesRating = document.getElementById(\"caraousel-rating\");\r\n    if (slidestitle && slidesDescription && slidesReleaseDate && slidesRating) {\r\n        if (slideData) {\r\n            slidestitle.textContent = slideData[currentSlide].title;\r\n            slidesDescription.textContent = slideData[currentSlide].overview;\r\n            slidesReleaseDate.textContent = slideData[currentSlide].release_date;\r\n            slidesRating.textContent = slideData[currentSlide].vote_average;\r\n        }\r\n        else {\r\n            console.error(\"slideData is undefined\");\r\n        }\r\n    }\r\n    else {\r\n        console.error(\"Element not found\");\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://MyLibrary/./src/client.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/client.ts");
/******/ 	MyLibrary = __webpack_exports__;
/******/ 	
/******/ })()
;